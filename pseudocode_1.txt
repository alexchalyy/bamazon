Bamazon Pseudocode 1.

Written by Alex Chalyy on 4/12/2019.

Part 1:

1.  Create bamazon.sql file

    a.  Create a bamazon db.    DONE.

    b.  Create a products table in bamazon db with: DONE.

            item_id (unique id for each product)    DONE.

            product_name (Name of product) DONE.

            department_name DONE.

            price (cost to customer) DONE.

            stock_quantity (how much of the product is available in stores) DONE.

    c.  Populate the database with 10 mock values. DONE.

2.  Create bamazonCustomer.js file. DONE.

    a.  Include package.json file.  DONE.

    b.  Import mysql npm package. DONE.

    c.  Import inquirer npm package. DONE.

    d.  Make mysql connection to bamazon_db. DONE.

    e.  When user runs bamazonCustomer.js in node: DONE.

        While variable status is not "N" DONE

        i.   Dispaly all rows from products table with ids, names, and prices. DONE

        ii.  Store all of them in local variables. DONE

        iii.  Using inquirer package DONE
        
              - prompt the user for id of the product (one of the rows) they would like to buy, and read input. DONE

                if input is not valid (wrong data type/does not exist), display validation message DONE

                else read in value and store it in a variable DONE

              - prompt the user of how many units of that items they want to buy DONE

                if input is not valid (wrong data type/negative), display validation message DONE

                else read in value and store it in a variable DONE

        iv.   If the quanity desired exceeds actual product stock_quantity DONE

                display "insufficient quantity!" on screen. DONE

              else update the quantity of product in db to whatever it was minus the items bought DONE

                   display the customer cost (quantity of times bought * price of an item) DONE

        Prompt the user if they would like to perform another transaction, if they enter "Y" go to the beginning of step e, else quite node. DONE

    f.  Close mysql connection. DONE.

3.  Update readme with functional description and screenshots.

4.  Update the portfolio page to include the project in github.